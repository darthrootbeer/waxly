# Pre-commit hooks configuration for Vinyl Lexicon
# See https://pre-commit.com for more information

repos:
  # General code formatting and linting
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
        exclude: ^docs/terms/.*\.md$  # Allow trailing whitespace in term files
      - id: end-of-file-fixer
        exclude: ^docs/terms/.*\.md$  # Allow files without final newline in term files
      - id: check-yaml
        args: ['--unsafe']  # Allow custom YAML tags
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-added-large-files
        args: ['--maxkb=1000']  # Warn about files larger than 1MB
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: debug-statements
      - id: check-docstring-first

  # Python code formatting
  - repo: https://github.com/psf/black
    rev: 24.10.0
    hooks:
      - id: black
        language_version: python3
        files: ^scripts/.*\.py$

  # Python import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ["--profile", "black"]
        files: ^scripts/.*\.py$

  # Python linting (disabled for now due to existing issues)
  # - repo: https://github.com/pycqa/flake8
  #   rev: 7.1.1
  #   hooks:
  #     - id: flake8
  #       files: ^scripts/.*\.py$
  #       args: ['--max-line-length=88', '--extend-ignore=E203,W503']

  # Markdown linting (disabled for now due to many existing issues)
  # - repo: https://github.com/igorshubovych/markdownlint-cli
  #   rev: v0.42.0
  #   hooks:
  #     - id: markdownlint
  #       args: ['--config', '.markdownlint.json']
  #       files: ^docs/.*\.md$

  # Custom validation hooks
  - repo: local
    hooks:
      # Validate term files against schema (warnings only)
      - id: validate-terms
        name: Validate term files
        entry: python scripts/validate_terms.py
        language: system
        files: ^docs/terms/.*\.md$
        pass_filenames: false
        always_run: true
        stages: [manual]  # Only run manually, not on every commit

      # Fix common validation issues (run on term file changes)
      - id: fix-validation-issues
        name: Fix validation issues
        entry: python scripts/fix_validation_issues.py
        language: system
        files: ^docs/terms/.*\.md$
        pass_filenames: false

      # Regenerate navigation pages (run on term file changes)
      - id: regenerate-navigation
        name: Regenerate navigation pages
        entry: python scripts/generate_letter_hubs.py && python scripts/generate_tag_hubs.py
        language: system
        files: ^docs/terms/.*\.md$
        pass_filenames: false

      # Add cross-references (run on term file changes)
      - id: autolink-references
        name: Add cross-references
        entry: python scripts/autolink_cross_references.py
        language: system
        files: ^docs/terms/.*\.md$
        pass_filenames: false

      # Test MkDocs build (run on docs/config changes)
      - id: test-mkdocs-build
        name: Test MkDocs build
        entry: mkdocs build --quiet
        language: system
        files: ^(docs/|mkdocs\.yml|requirements\.txt)$
        pass_filenames: false

      # Check for TODO items in committed files
      - id: check-todos
        name: Check for TODO items
        entry: python scripts/check_todos.py
        language: system
        files: ^scripts/.*\.py$
        pass_filenames: false
        always_run: false
